#!/usr/bin/env bash
set -euf -o pipefail

# shellcheck source=functions
source "${BASH_SOURCE%/*}/../sanctuary-scripts/functions"

run_custom_script lint-readme "$@"

if test -f README.md ; then
  cp README.md README.md.orig
  trap 'rm -f README.md.temp && mv README.md.orig README.md' EXIT
else
  trap 'rm -f README.md.temp && rm README.md' EXIT
fi

opening="$(get opening-delimiter)"
closing="$(get closing-delimiter)"
module="$(get module-type)"

# https://github.com/davidchambers/doctest/blob/0.16.0/lib/doctest.js#L173-L209
# displays the algorithm upon which this function is based. Differences:
#
#   - `rewrite` does not strip prefixes, as they are not present in the readme;
#   - `rewrite` must print all lines, not just those within doctest blocks; and
#   - `rewrite` must insert semicolons (and possibly parens) to satisfy ESLint.
rewrite() {
  local state=closed
  local prev=
  local line
  while IFS='' read -r line ; do
    if [[ $state == closed ]] ; then
      if [[ $line == "$opening" ]] ; then
        state=open
      fi
    elif [[ $line == "$closing" ]] ; then
      state=closed
      [[ $prev == *';' ]] || [[ -z $prev ]] || printf ';'
    elif [[ ${line:0:2} == '> ' ]] ; then
      line="${line:2}"
      state=input
    elif [[ ${line:0:2} == '. ' ]] ; then
      line="${line:2}"
    elif [[ $state == input ]] ; then
      if [[ ${line:0:2} == '! ' ]] ; then
        line=
      elif [[ $line == '{'*'}' ]] ; then
        line="($line)"
      fi
      [[ $prev == *';' ]] || [[ -z $prev ]] || printf ';'
    elif [[ $state == output ]] ; then
      state=open
      [[ $prev == *';' ]] || [[ -z $prev ]] || printf ';'
    fi
    printf '\n%s' "$line"
    prev="$line"
  done
  printf '\n'
}

VERSION=0.0.0 run generate-readme

node_modules/.bin/remark \
  --frail \
  --no-stdout \
  --use remark-lint-no-undefined-references='allow:["â€¦","..."]' \
  --use remark-lint-no-unused-definitions \
  -- README.md

cp README.md README.md.temp
rewrite <README.md.temp >README.md

if [[ $module == esm ]] ; then
  source=module
else
  source=script
fi

node_modules/.bin/eslint \
  --parser-options "sourceType:$source" \
  -- README.md
